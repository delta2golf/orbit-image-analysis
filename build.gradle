/*
 *     Orbit, a versatile image analysis software for biological image-based quantification.
 *     Copyright (C) 2009 - 2017 Idorsia Pharmaceuticals Ltd., Hegenheimermattweg 91, CH-4123 Allschwil, Switzerland.
 *
 *     This program is free software: you can redistribute it and/or modify
 *     it under the terms of the GNU General Public License as published by
 *     the Free Software Foundation, either version 3 of the License, or
 *     (at your option) any later version.
 *
 *     This program is distributed in the hope that it will be useful,
 *     but WITHOUT ANY WARRANTY; without even the implied warranty of
 *     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *     GNU General Public License for more details.
 *
 *     You should have received a copy of the GNU General Public License
 *     along with this program.  If not, see <http://www.gnu.org/licenses/>.
 *
 */
buildscript {
    repositories {
        jcenter()
    }
    dependencies {
        classpath "com.smokejumperit.gradle.license:Gradle-License-Report:0.0.2"
        classpath "io.codearte.gradle.nexus:gradle-nexus-staging-plugin:0.5.3"
    }
}
plugins {
    id "com.github.cr0.macappbundle" version "3.0.1"
}
apply plugin: 'java'
apply plugin: 'maven-publish'
apply plugin: 'license-report'

[ compileJava, compileTestJava ]*.options*.encoding = 'UTF-8'

ext.description = "OrbitImageAnalysis"

sourceCompatibility = 1.8
targetCompatibility = 1.8

ext.orbitVersion = new File(projectDir,"src/main/resources/version.txt").text;
ext.orbitVersionStr = orbitVersion.replaceAll("\\.","")

repositories {
    mavenLocal()
    mavenCentral()
    maven {
        url 'http://artifacts.openmicroscopy.org/artifactory/maven/'
    }
    maven {
        url 'https://artifacts.unidata.ucar.edu/content/repositories/unidata-releases/'    // just for thredds-parent-4.3.22 used by netcdf-4.3.22
    }
    maven {
        url 'https://maven.scijava.org/content/repositories/snapshots/'    // for legacy-imglib1-2.0.0-SNAPSHOT.jar used by imagej1 compatible graph_cut
    }
    maven {
        url 'http://maven.imagej.net/content/repositories/releases/'  // scifio
    }
    maven {
        url 'https://repository.jboss.org/nexus/content/repositories/thirdparty-releases/' // for jai-codec
    }
}

if (JavaVersion.current().isJava8Compatible()) {
    allprojects {
        tasks.withType(Javadoc) {
            options.addStringOption('Xdoclint:none', '-quiet')
        }
    }
}
task sourceJar(type: Jar) {
    from sourceSets.main.allJava
}
task docJar(type: Jar, dependsOn: 'javadoc') {
    from javadoc.destinationDir
}


publishing {
    publications {
        mavenJava(MavenPublication) {
            groupId 'com.actelion.research'
            artifactId 'orbit-image-analysis'
            version orbitVersion
            from components.java
            artifact sourceJar {
                classifier "sources"
            }
            artifact docJar {
                classifier "javadoc"
            }
            pom.withXml {
                asNode().appendNode('description', 'Orbit, a versatile image analysis software for biological image-based quantification')
            }
        }
    }
}


task copyToLib( type: Copy ) {
    into "$buildDir/libs/lib"
    from configurations.runtime
}

jar {
    dependsOn copyToLib
    manifest {
        attributes 'Implementation-Title': 'Orbit Image Analysis',
                'Implementation-Version': orbitVersion,
                'Main-Class': 'com.actelion.research.orbit.imageAnalysis.components.OrbitImageAnalysis',
                'Vendor': 'Idorsia',
                'Class-Path': 'lib/*'
    }
}






task icons {
    ant.taskdef(name:'svg2java'
            ,classpath:'lib/flamingo-svg-transcoder-ant-1.1.1.jar'
            ,classname:'org.pushingpixels.flamingo.api.svg.SvgTranscoderTask'
    )
    ant.svg2java(todir:"src/main/java/com/actelion/research/orbit/imageAnalysis/components/icons",
            verbose:"true", namingStrategy:"camelcase", template:"resizable", package:"com.actelion.research.orbit.imageAnalysis.components.icons",
            {
                fileset(dir:"src/main/resources/resource/svg", includes:"**/*.svg*")
            })
}


configurations {
    compile.exclude module:'slf4j-log4j12'
    compile.exclude group:'com.codahale.metrics', module:'metrics-jvm'
    compile.exclude group:'com.codahale.metrics', module:'metrics-core'
    compile.exclude group:'com.codahale.metrics', module:'metrics-graphite'
    compile.exclude group:'cglib', module:'cglib'
    compile.exclude group:'quartz', module:'quartz'
}



dependencies {
    compile 'com.actelion.research:lib-orbit-common:1.2.12'
//    compile 'com.actelion.research:image-provider-omero:1.6.1'
    compile 'com.actelion.research:map-reduce-generic:1.0.10'
//    compile 'com.actelion.research:map-reduce-exec-spark:1.1.3'


    compile(group: 'com.actelion.research', name: 'OrbitImageAnalysisAct', version: '0.3.1') {     // 0.2.14
        exclude(module: 'orbit-image-analysis')
    }
//    compile 'com.actelion.research:mapReduceExecGrid:1.0.1.1'
//   compile 'com.actelion.research:imageproviderorbit:1.1.18'


    // JNA (needed for the NDPR C++ API)
    compile 'net.java.dev.jna:jna:4.5.1'

// only used for image-provider-omero development
//    compile(group: 'omero', name: 'blitz', version: '5.4.7-ice36-b93') {   // 5.2.7-ice36-b40   5.3.0-ice36-b59
//        exclude group: 'org.springframework.ldap', module: 'spring-ldap'
//        exclude group: 'org.testng', module: 'testng'
//        exclude group: 'hsqldb', module: 'hsqldb'
//    }


    // explicite versions, see compile.excludes
    compile 'org.quartz-scheduler:quartz:2.1.1'
    compile 'org.sonatype.sisu.inject:cglib:2.2.1-v20090111'
    compile 'io.dropwizard.metrics:metrics-core:3.1.2'
    compile 'io.dropwizard.metrics:metrics-jvm:3.1.2'
    compile 'io.dropwizard.metrics:metrics-graphite:3.1.2'


    compile 'com.thoughtworks.xstream:xstream:1.4.9'
    compile 'org.jaitools:jt-utils:1.4.0' // jai-tools
    compile 'com.sun.media:jai-codec:1.1.3'
    compile 'javax.media:jai-core:1.1.3'
    compile 'com.github.jai-imageio:jai-imageio-core:1.3.1'
    compile 'com.github.jai-imageio:jai-imageio-jpeg2000:1.3.0'

    compile (group:'org.swinglabs', name:'swingx', version:'1.6.1') {
        exclude (module: 'swing-worker')
    }

    // substance
    //compile fileTree(dir: 'lib', include: ['*.jar'], exclude: 'flamingo-svg-transcoder-ant-1.1.1.jar')
    compile 'com.github.insubstantial:substance:7.3'
    compile 'com.github.insubstantial:substance-flamingo:7.3'
    //compile 'org.pushing-pixels:radiance-substance:1.0.2'
    //compile 'org.pushing-pixels:radiance-flamingo:1.0.2'

    compile 'com.google.guava:guava:20.0'  // 21 only for java8
    compile 'org.apache.commons:commons-math3:3.6.1'
    compile (group: 'com.googlecode.matrix-toolkits-java', name: 'mtj', version:'1.0.4') {
        transitive = false
    }
    // weka start - only java implementations
    compile (group: 'nz.ac.waikato.cms.weka', name: 'weka-stable', version:'3.8.0') {
        transitive = false
    }
    //compile 'nz.ac.waikato.cms.weka.thirdparty:java-cup-11b:2015.03.26'
    //compile 'nz.ac.waikato.cms.weka.thirdparty:java-cup-11b-runtime:2015.03.26'
    compile 'nz.ac.waikato.cms.weka.thirdparty:bounce:0.18'
    compile 'com.github.fommil.netlib:core:1.1.2'
    compile 'com.github.fommil.netlib:generator:1.1.2'
    compile 'com.github.fommil.netlib:native_system-java:1.1'
//    compile 'com.github.fommil.netlib:netlib-native_system-linux-x86_64:1.1'
//    compile 'com.github.fommil.netlib:netlib-native_ref-linux-x86_64:1.1'
//    compile 'com.github.fommil.netlib:netlib-native_system-win-x86_64:1.1'
//    compile 'com.github.fommil.netlib:netlib-native_system-win-i686:1.1'
//    compile 'com.github.fommil.netlib:netlib-native_system-osx-x86_64:1.1'
//    compile 'com.github.fommil.netlib:netlib-native_ref-win-x86_64:1.1'
//    compile 'com.github.fommil.netlib:netlib-native_ref-win-i686:1.1'
    // weka end



    compile 'gov.nih.imagej:imagej:1.46'
    compile 'de.biomedical-imaging.ij:ij_blob:1.4.9'
    compile (group: 'org.codelibs', name:'jcifs', version:'1.3.18.1') {  // for SmbUtils     (exclude javax.servlet-api because Spark needs a different version)
       exclude (group:'javax.servlet', module: 'servlet-api')
    }
    compile (group: 'ome', name:'formats-gpl', version:'6.3.0') {     // 6.1.1
        exclude (module: 'blitz')
    }
    compile (group: 'net.imglib2', name: 'imglib2', version: '3.2.1') // to avoid jpeg2000 problem: NoSuchMethodError: jj2000.j2k.fileformat.reader.FileFormatReader.<init>

//    compile 'io.scif:scifio:0.30.0'  // only java 1.8
//    compile 'io.scif:scifio-bf-compat:2.0.0'
    compile 'org.codehaus.groovy:groovy-all:2.5.7'
    compile 'org.codehaus.gpars:gpars:1.2.1'
    compile 'com.fifesoft:rsyntaxtextarea:3.0.3'
    compile 'com.fifesoft:autocomplete:3.0.0'  
 //   compile 'com.fifesoft:languagesupport:3.0.0'

    compile 'ch.qos.logback:logback-classic:1.1.7'
    compile 'net.java.linoleum:jlfgr:1_0'
    compile (group: 'sc.fiji', name: 'legacy-imglib1', version: '2.0.0-SNAPSHOT') {     //1.1.5  2.0.0-SNAPSHOT for graph_cut
        transitive = false
    }
    compile 'org.xerial:sqlite-jdbc:3.21.0'
    compileOnly 'org.tensorflow:tensorflow:1.14.0'  // 1.4.0 1.11.0 compileOnly
    compileOnly 'org.tensorflow:libtensorflow_jni_gpu:1.14.0'
    compile group: 'org.apache.httpcomponents', name: 'httpclient', version: '4.5.6'
    testCompile 'junit:junit:[4.0,)'

}

if (file('custom.gradle').exists()) {
    apply from: 'custom.gradle'
}